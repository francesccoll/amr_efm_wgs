#!/bin/bash

set -e

# NOTE: this script runs amrfinder for GenBank assemblies

module load amr/3.10.18-2021-09-30.1

# amrfinder --version
# 3.10.18
# amrfinder database version used: 2021-12-21.1

# This bash script is used to run NCBI amrfinder from de novo assemblies
# NOTE: fastq files do not seem to be https://github.com/ncbi/amr/wiki/Running-AMRFinderPlus

# cd /nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/assemblies
# pf assembly -t file -i ../datasets/efm_dst_dataset_v3.run_accessions.sample_ids.on_farm.txt > efm_dst_dataset_v3.run_accessions.on_farm.assembly_paths.txt
# NOTE: three batches of samples made up efm_dst_dataset_v3
#	- Run accessions with assemblies on farm/lustre
#	- Run accessions without assemblies on farm/lustre, assembled using ~/scripts/assembly_pipeline.py and saved in /55.e_faecium_amr_prediction/assemblies/fasta
#	- Genbank downloaded assemblies, sample ids listed here: efm_dst_dataset_v2.assembly_accessions.txt

# NOTE: a local database of the latest amrfinder database must be downloaded
# done as recommended here: https://github.com/ncbi/amr/wiki/Upgrading#database-updates
# NOTE: amrfinder_update not found on farm directory 
# cd /Users/francesccoll/fellowship/2.projects/55.e_faecium_amr_prediction/amrfinder
# mkdir amrfinder_db
# amrfinder_update -d ./amrfinder_db
# the directory amrfinder_db.zip was uploaded to the farm and saved in:
# /nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/amrfinder/amrfinder_db

assemblies_dir="/nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/assemblies/fasta/";
samples_file="/nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/assemblies/efm_dst_dataset_v2.assembly_accessions.txt"; # same for efm_dst_dataset_v3
dir="/nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/amrfinder/";
amrfinder_db="/nfs/users/nfs_f/fc4/lustre_scratch118/55.e_faecium_amr_prediction/amrfinder/amrfinder_db/latest/";

cd $dir

laSamples=`awk -F'\t' '{ print $1}' $samples_file `;
amrfinder_out_dir=$dir"amrfinder_results/";

for sample in $laSamples
do

echo $sample
assembly=$assemblies_dir$sample".fa";
out_file=$amrfinder_out_dir$sample".amrfinder_output.txt";

if [ ! -f $out_file ]
then
	bsub -q normal -G team81 -J $sample"_amrfinder" -o $sample"_amrfinder.out" -R "select[mem > 2000] rusage[mem=2000]" -M 2000 "amrfinder -n $assembly -O Enterococcus_faecium -o $out_file -d $amrfinder_db"
fi

done
